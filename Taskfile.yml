version: '3'

dotenv: [".env"]

vars:
  CMD_PODMAN:
    sh: command -v podman

tasks:
  default:
    desc: Build and run microlobby
    cmds:
      - task: sysctl
      - task: build:postgresd
      - task: build:volume
      - task: build:download
      - task: build:protoc
      - task: build
      - task: up
      - task: ps

  sysctl:
    desc: Run sysctl to allow >=80 ports
    cmds:
      - sudo sysctl net.ipv4.ip_unprivileged_port_start=80
    preconditions:
      - test -n "{{.CMD_PODMAN}}"
    status:
      - test "x80" = "x$(cat /proc/sys/net/ipv4/ip_unprivileged_port_start)"

  build:volume:
    run: "once"
    cmds:
      - podman volume inspect microlobby_go 1>/dev/null 2>&1 || podman volume create microlobby_go

  build:postgresd:
    cmds:
      - podman build --build-arg=DOCKER_IO={{.DOCKER_IO}} --build-arg=TAG={{.DOCKER_POSTGRES_TAG}} -t {{.DOCKER_ORG_WARZONE}}/microlobby-postgresd:{{.MICROLOBBY_POSTGRES_TAG}} ./docker/postgresd

  builder:
    desc: Run something in the builder container for example "task builder -- go get -u ./..."
    cmds:
      - podman run --rm -v "{{.PWD}}:/code" -v "{{.VOLUME_PATH}}:/go:rw" -v "{{.BUILD_MOUNT_FOLDER_INT}}:{{.BUILD_MOUNT_FOLDER_INT}}" {{.DOCKER_ORG_JO_MICRO}}/builder:latest {{.CLI_ARGS}}
    vars:
      VOLUME_PATH:
        sh: podman volume inspect microlobby_go --format "{{"{{"}}.Mountpoint{{"}}"}}"
      BUILD_MOUNT_FOLDER_INT:
        sh: realpath {{.BUILD_MOUNT_FOLDER}}
    preconditions:
      - test -n "{{.CLI_ARGS}}"

  build:download:
    desc: Download go dependencies
    cmds:
      - task: builder
        vars:
          CLI_ARGS: "go mod download"

  build:protoc:
    desc: Generate shared protobuf files and those for a service
    sources:
      - shared/proto/**/*.proto
      - service/**/*.proto
    cmds:
      - task: builder
        vars:
          CLI_ARGS: "/scripts/protoc_gen.sh"

  build:service:
    vars:
      GOVOL_PATH:
        sh: podman volume inspect --format "{{"{{"}}.Mountpoint{{"}}"}}" microlobby_go
      BUILD_MOUNT_FOLDER_INT:
        sh: realpath {{.BUILD_MOUNT_FOLDER}}
    cmds:
      - echo 'Service "{{.SERVICE}}"'
      - podman build 
          -v "{{.GOVOL_PATH}}:/go:rw" 
          -v "{{.BUILD_MOUNT_FOLDER_INT}}:{{.BUILD_MOUNT_FOLDER_INT}}" 
          -t {{.DOCKER_ORG_WARZONE}}/microlobby-$(echo {{.SERVICE}} | sed 's#/#-#g'):latest 
          --build-arg=DOCKER_IO={{.DOCKER_IO}} 
          --build-arg=DOCKER_ORG_JO_MICRO={{.DOCKER_ORG_JO_MICRO}} 
          --build-arg=SERVICE={{.SERVICE}} 
          -f docker/genericservice/Dockerfile 
          . || exit 1
    status:
      - test -n "{{.SERVICE}}" -a -d service/{{.SERVICE}}
      - test -z "{{.CMD_PODMAN}}"
    preconditions:
      - test -n "{{.SERVICE}}"

  build:service:gamedb/v1:
    sources:
      - ./go.sum
      - ./service/gamedb/v1/**/*.go
      - ./shared/**/*.go
    cmds:
      - task: build:service
        vars:
          SERVICE: gamedb/v1

  build:service:lobby/v3:
    sources:
      - ./go.sum
      - ./service/lobby/v3/**/*.go
      - ./shared/**/*.go
    cmds:
      - task: build:service
        vars:
          SERVICE: lobby/v3

  build:service:settings/v1:
    sources:
      - ./go.sum
      - ./service/settings/v1/**/*.go
      - ./shared/**/*.go
    cmds:
      - task: build:service
        vars:
          SERVICE: settings/v1

  build:service:badwords/v1:
    sources:
      - ./go.sum
      - ./service/badwords/v1/**/*.go
      - ./shared/**/*.go
    cmds:
      - task: build:service
        vars:
          SERVICE: badwords/v1

  build:
    cmds:
      - task: build:service:gamedb/v1
      - task: build:service:lobby/v3
      - task: build:service:settings/v1
      - task: build:service:badwords/v1

  up:
    desc: Run all containers
    deps:
      - check:toolchain
    cmds:
      - DOCKER_BUILDKIT=0 docker-compose up -d --remove-orphans
  
  ps:
    desc: Show running containers
    cmds:
      - docker-compose ps

  logs:
    desc: Show docker logs
    cmds:
      - docker-compose logs -f {{.CLI_ARGS}}

  down:
    desc: Stopp all containers
    deps:
      - check:toolchain
    cmds:
      - docker-compose down

  keys:
    desc: Generate JWT keys (use --auth2_generate_format=RSA4096 for RSA)
    cmds:
      - podman run {{.DOCKER_ORG_JO_MICRO}}/auth2-sql:latest microauth2sqld --auth2_generate_keys {{.CLI_ARGS}}

  update:
    desc: Update all go dependencies
    cmds:
      - task: builder
        vars:
          CLI_ARGS: "/scripts/upgrade_deps.sh"

  check:toolchain:
    run: once
    cmds:
      - test -n "{{.CMD_PODMAN}}"
      - test -n "{{.CMD_DCOMPOSE}}"
    vars:
      CMD_DCOMPOSE:
        sh: command -v docker-compose

  rm:
    desc: "Remove all persistent data"
    cmds:
      - docker-compose down --volumes --rmi all
      - podman volume rm microlobby_go || exit 0
      - rm -rf ./.task